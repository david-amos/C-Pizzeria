#pragma checksum "C:\Users\Tyler\Desktop\Winter Term 2020\Advanced C#\Unit8Github\part2\C-Pizzeria\Pizzeria\Views\Home\pizzas.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "31172f910e8d7aec25868c135cff9f5177b5fd2a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_pizzas), @"mvc.1.0.view", @"/Views/Home/pizzas.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Tyler\Desktop\Winter Term 2020\Advanced C#\Unit8Github\part2\C-Pizzeria\Pizzeria\Views\_ViewImports.cshtml"
using Pizzeria;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Tyler\Desktop\Winter Term 2020\Advanced C#\Unit8Github\part2\C-Pizzeria\Pizzeria\Views\_ViewImports.cshtml"
using Pizzeria.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"31172f910e8d7aec25868c135cff9f5177b5fd2a", @"/Views/Home/pizzas.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f29882038f17b918a0c58e0cb2361f7cb5b3eb67", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_pizzas : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-center"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("runat", new global::Microsoft.AspNetCore.Html.HtmlString("server"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<style>
    p {
        padding: 40px;
        border: 20px solid darkred;
    }

    form {
        padding: 50px;
        border: 20px solid darkred;
    }

    button {
        padding: 10px;
    }

    .grid-container {
        display: grid;
        grid-template-columns: auto auto auto;
        grid-gap: 20px;
        margin: 5px;
    }

    .container {
        margin: 5px;
    }

    .Pizza {
        grid-column: 1 / span 2;
    }

    .Cost {
        float: right;
    }
</style>

<div class=""text-center"">
    <div class=""grid-container"">


        <div class=""grid-child Pizza"">
            <p> Meat Lovers Pizza: It's got all the meat in the world, cat, rat, dog, horse, fox, bear, fish, if you can name it its on it </p>
        </div> <!--Pizza end -->

        <div class=""grid-child Cost"">
            <p>
                <input type=""radio"" id=""small"" name=""pizzasize"" value=""small"">
                <label for=""small"">Small</label>
                <input ");
            WriteLiteral(@"type=""radio"" id=""medium"" name=""pizzasize"" value=""medium"">
                <label for=""medium"">Medium</label>
                <input type=""radio"" id=""Large"" name=""pizzasize"" value=""Large"">
                <label for=""large"">Large</label>
            </p>
            <!--add code here for counter -->
        </div> <!--Cost and counter end -->

        <div class=""grid-child Pizza"">
            <p> Vegan Pizza: A pizza for those that hate the Meat Lovers Pizza</p>
        </div> <!--Pizza end -->

        <div class=""grid-child Cost"">
            <p>
                <input type=""radio"" id=""small"" name=""pizzasize"" value=""small"">
                <label for=""small"">Small</label>
                <input type=""radio"" id=""medium"" name=""pizzasize"" value=""medium"">
                <label for=""medium"">Medium</label>
                <input type=""radio"" id=""Large"" name=""pizzasize"" value=""Large"">
                <label for=""large"">Large</label>
            </p>
            <!--add code here for counter -");
            WriteLiteral(@"->
        </div> <!--Cost and counter end -->

        <div class=""grid-child Pizza"">
            <p> Taco Pizza: A pizza that has all the tasty parts of a taco</p>
        </div> <!--Pizza end -->

        <div class=""grid-child Cost"">
            <p>
                <input type=""radio"" id=""small"" name=""pizzasize"" value=""small"">
                <label for=""small"">Small</label>
                <input type=""radio"" id=""medium"" name=""pizzasize"" value=""medium"">
                <label for=""medium"">Medium</label>
                <input type=""radio"" id=""Large"" name=""pizzasize"" value=""Large"">
                <label for=""large"">Large</label>
            </p>
            <!--add code here for counter -->
        </div> <!--Cost and counter end -->

        <div class=""grid-child Pizza"">
            <p> Breakfast Pizza: Egg, bacon, and gravy is what makes this masterpiece</p>
        </div> <!--Pizza end -->

        <div class=""grid-child Cost"">
            <p>
                <input type=""rad");
            WriteLiteral(@"io"" id=""small"" name=""pizzasize"" value=""small"">
                <label for=""small"">Small</label>
                <input type=""radio"" id=""medium"" name=""pizzasize"" value=""medium"">
                <label for=""medium"">Medium</label>
                <input type=""radio"" id=""Large"" name=""pizzasize"" value=""Large"">
                <label for=""large"">Large</label>
            </p>
        </div> <!--Cost end -->


    </div>
</div>

<!--Checkbox to make form appear and disappear here-->
<input type=""checkbox"" id=""Cus"" name=""Cus"" onclick=""hideclick()"">
<label for=""Cus"">Click On the checkbox for custom pizzas</label>

<script>
    function hideclick() {
        var checkbox = document.getElementById(""Cus"");
        var hide = document.getElementById(""hide"");
        if (checkbox.checked == true) {
            hide.style.display = ""block;
        } else {
            hide.style.display = ""none"";
    }
</script>

<div id=""hide"" style=""display:none"">
    ​​");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "31172f910e8d7aec25868c135cff9f5177b5fd2a8622", async() => {
                WriteLiteral(@"
        <h1>CUSTOM PIZZA</h1>
        <h2>3 Topping limit</h2>
        <input type=""checkbox"" id=""Top1"" name=""Top1"" value=""ExCheese"">
        <label for=""Top1"">Extra Cheese</label><br>

        <input type=""checkbox"" id=""Top2"" name=""Top2"" value=""Sausage"">
        <label for=""Top2"">Sausage</label><br>

        <input type=""checkbox"" id=""Top3"" name=""Top3"" value=""Pepperoni"">
        <label for=""Top3"">Pepperoni</label><br>

        <input type=""checkbox"" id=""Top4"" name=""Top4"" value=""Olives"">
        <label for=""Top4"">Olives</label><br>

        <input type=""checkbox"" id=""Top5"" name=""Top5"" value=""BellPeppers"">
        <label for=""Top5"">Bell Peppers</label><br>

        <input type=""checkbox"" id=""Top6"" name=""Top6"" value=""Mushrooms"">
        <label for=""Top6"">Mushrooms</label><br>

        <input type=""checkbox"" id=""Top7"" name=""Top7"" value=""Doritos"">
        <label for=""Top7"">Doritos(Nacho)</label><br>

        <input type=""checkbox"" id=""Top8"" name=""Top8"" value=""Pickles"">
        <label for");
                WriteLiteral(@"=""Top8"">Pickles</label><br>

        <input type=""checkbox"" id=""Top9"" name=""Top9"" value=""Anchovies"">
        <label for=""Top9"">Anchovies</label><br>

        <input type=""checkbox"" id=""Top10"" name=""Top10"" value=""Bacon"">
        <label for=""Top10"">Bacon</label><br>

        <input type=""checkbox"" id=""Top11"" name=""Top11"" value=""BanaPeppers"">
        <label for=""Top11"">Banana Peppers</label><br>

        <input type=""checkbox"" id=""Top12"" name=""Top12"" value=""CanadBacon"">
        <label for=""Top12"">Canadian Bacon</label><br>

        <input type=""checkbox"" id=""Top13"" name=""Top13"" value=""SunTomato"">
        <label for=""Top13"">Sun-dried Tomatos</label><br>

        <input type=""checkbox"" id=""Top14"" name=""Top14"" value=""Steak"">
        <label for=""Top14"">Steak</label><br>

        <input type=""checkbox"" id=""Top15"" name=""Top15"" value=""Onions"">
        <label for=""Top15"">Onions</label><br>

        <input type=""checkbox"" id=""Top16"" name=""Top16"" value=""Jalapenos"">
        <label for=""Top16"">Jalape");
                WriteLiteral(@"nos</label><br>

        <input type=""checkbox"" id=""Top17"" name=""Top17"" value=""Spinach"">
        <label for=""Top17"">Spinach</label><br>

        <input type=""checkbox"" id=""Top18"" name=""Top18"" value=""Chicken"">
        <label for=""Top18"">Chicken</label><br>

        <input type=""submit"" value=""Submit"">
        <!--Make it so all checkboxs clear on button submit-->
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</div>\r\n\r\n<button class=\"text-center\" type=\"button\"");
            BeginWriteAttribute("href", " href=\"", 6721, "\"", 6728, 0);
            EndWriteAttribute();
            WriteLiteral(">I\'m Done!</button>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
